var w=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var L=Object.getOwnPropertyNames;var A=Object.prototype.hasOwnProperty;var I=(a,e)=>{for(var t in e)w(a,t,{get:e[t],enumerable:!0})},N=(a,e,t,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of L(e))!A.call(a,n)&&n!==t&&w(a,n,{get:()=>e[n],enumerable:!(o=b(e,n))||o.enumerable});return a};var O=a=>N(w({},"__esModule",{value:!0}),a);var R={};I(R,{default:()=>y});module.exports=O(R);var v=require("obsidian");var r=require("obsidian"),c="yearly-calendar-view",p=class extends r.ItemView{constructor(e,t){super(e),this.plugin=t}getViewType(){return c}getDisplayText(){return`Year Calendar - ${this.plugin.settings.year}`}getIcon(){return"calendar-days"}async onOpen(){let e=this.containerEl.children[1];e.empty(),await this.renderCalendar(e)}async onClose(){}async refresh(){this.leaf.updateHeader();let e=this.containerEl.children[1];e.empty(),await this.renderCalendar(e)}async renderCalendar(e){let t=this.plugin.settings.year,o=(0,r.moment)().format("YYYY-MM-DD"),n=this.app.vault.getMarkdownFiles(),C=[];for(let i of n){let s=this.app.metadataCache.getFileCache(i)?.frontmatter;if(s&&s.date){let l=(0,r.moment)(s.date.toString(),"YYYY-MM-DD",!0);l.isValid()&&C.push({date:l.format("YYYY-MM-DD"),name:i.basename})}}let E=e.createEl("table",{cls:"my-calendar-table"}),D=E.createEl("thead").createEl("tr");D.createEl("th",{text:"W"}),"Mon Tue Wed Thu Fri Sat Sun".split(" ").forEach(i=>D.createEl("th",{text:i}));let M=E.createEl("tbody"),V=(0,r.moment)(`${t}-01-01`).startOf("isoWeek"),P=(0,r.moment)(`${t}-12-31`).endOf("isoWeek"),d=V.clone();for(;d.isBefore(P);){let i=M.createEl("tr");i.createEl("td",{cls:"week-number",text:d.isoWeek().toString()});for(let f=0;f<7;f++){let s=d,l=s.format("YYYY-MM-DD"),S=i.createEl("td"),h=["calendar-cell"],T=s.month()%2===1;h.push(T?"odd-month":"even-month"),s.year()!==t&&h.push("other-year"),l===o&&h.push("today"),S.addClass(...h);let Y=S.createDiv({cls:"cell-content"}),x=Y.createDiv({cls:"top-content"}),k=Y.createDiv({cls:"dot-area"});s.year()===t&&x.setText(s.date().toString()),C.filter(m=>m.date===l).forEach(m=>{let W=k.createSpan({cls:"dot",text:"\u25CF"});W.title=m.name}),d.add(1,"day")}}}};var u=require("obsidian"),g=class extends u.PluginSettingTab{constructor(e,t){super(e,t),this.plugin=t}display(){let{containerEl:e}=this;e.empty(),e.createEl("h2",{text:"Continuous Calendar Settings"}),new u.Setting(e).setName("Year to Display").setDesc("Which year the calendar should show.").addText(t=>t.setPlaceholder("e.g., 2024").setValue(this.plugin.settings.year.toString()).onChange(async o=>{let n=parseInt(o);isNaN(n)||(this.plugin.settings.year=n,await this.plugin.saveSettings(),this.plugin.refreshCalendarView())}))}};var F={year:new Date().getFullYear()},y=class extends v.Plugin{constructor(){super(...arguments);this.calendarView=null}async onload(){console.log("Loading Continuous Calendar Plugin"),await this.loadSettings(),this.registerView(c,t=>(this.calendarView=new p(t,this),this.calendarView)),this.addRibbonIcon("calendar-days","Open Continuous Calendar",t=>{this.activateView()}),this.addSettingTab(new g(this.app,this))}onunload(){console.log("Unloading Continuous Calendar Plugin"),this.calendarView=null}async loadSettings(){this.settings=Object.assign({},F,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async activateView(){this.app.workspace.getLeavesOfType(c).forEach(t=>{t.detach()}),await this.app.workspace.getRightLeaf(!1)?.setViewState({type:c,active:!0}),this.app.workspace.revealLeaf(this.app.workspace.getLeavesOfType(CAL-VIEW_TYPE)[0])}refreshCalendarView(){this.calendarView&&(this.calendarView.refresh(),console.log("Calendar view refreshed."))}};
