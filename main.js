var Nt=Object.create;var W=Object.defineProperty;var Ct=Object.getOwnPropertyDescriptor;var Et=Object.getOwnPropertyNames;var Yt=Object.getPrototypeOf,Ft=Object.prototype.hasOwnProperty;var Pt=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),vt=(e,t)=>{for(var n in t)W(e,n,{get:t[n],enumerable:!0})},tt=(e,t,n,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of Et(t))!Ft.call(e,o)&&o!==n&&W(e,o,{get:()=>t[o],enumerable:!(a=Ct(t,o))||a.enumerable});return e};var Mt=(e,t,n)=>(n=e!=null?Nt(Yt(e)):{},tt(t||!e||!e.__esModule?W(n,"default",{value:e,enumerable:!0}):n,e)),bt=e=>tt(W({},"__esModule",{value:!0}),e);var pt=Pt(i=>{"use strict";Object.defineProperty(i,"__esModule",{value:!0});var f=require("obsidian"),Q="YYYY-MM-DD",$="gggg-[W]ww",et="YYYY-MM",nt="YYYY-[Q]Q",at="YYYY";function k(e){let t=window.app.plugins.getPlugin("periodic-notes");return t&&t.settings?.[e]?.enabled}function O(){try{let{internalPlugins:e,plugins:t}=window.app;if(k("daily")){let{format:r,folder:s,template:g}=t.getPlugin("periodic-notes")?.settings?.daily||{};return{format:r||Q,folder:s?.trim()||"",template:g?.trim()||""}}let{folder:n,format:a,template:o}=e.getPluginById("daily-notes")?.instance?.options||{};return{format:a||Q,folder:n?.trim()||"",template:o?.trim()||""}}catch(e){console.info("No custom daily note settings found!",e)}}function L(){try{let e=window.app.plugins,t=e.getPlugin("calendar")?.options,n=e.getPlugin("periodic-notes")?.settings?.weekly;if(k("weekly"))return{format:n.format||$,folder:n.folder?.trim()||"",template:n.template?.trim()||""};let a=t||{};return{format:a.weeklyNoteFormat||$,folder:a.weeklyNoteFolder?.trim()||"",template:a.weeklyNoteTemplate?.trim()||""}}catch(e){console.info("No custom weekly note settings found!",e)}}function _(){let e=window.app.plugins;try{let t=k("monthly")&&e.getPlugin("periodic-notes")?.settings?.monthly||{};return{format:t.format||et,folder:t.folder?.trim()||"",template:t.template?.trim()||""}}catch(t){console.info("No custom monthly note settings found!",t)}}function I(){let e=window.app.plugins;try{let t=k("quarterly")&&e.getPlugin("periodic-notes")?.settings?.quarterly||{};return{format:t.format||nt,folder:t.folder?.trim()||"",template:t.template?.trim()||""}}catch(t){console.info("No custom quarterly note settings found!",t)}}function x(){let e=window.app.plugins;try{let t=k("yearly")&&e.getPlugin("periodic-notes")?.settings?.yearly||{};return{format:t.format||at,folder:t.folder?.trim()||"",template:t.template?.trim()||""}}catch(t){console.info("No custom yearly note settings found!",t)}}function ot(...e){let t=[];for(let a=0,o=e.length;a<o;a++)t=t.concat(e[a].split("/"));let n=[];for(let a=0,o=t.length;a<o;a++){let r=t[a];!r||r==="."||n.push(r)}return t[0]===""&&n.unshift(""),n.join("/")}function At(e){let t=e.substring(e.lastIndexOf("/")+1);return t.lastIndexOf(".")!=-1&&(t=t.substring(0,t.lastIndexOf("."))),t}async function St(e){let t=e.replace(/\\/g,"/").split("/");if(t.pop(),t.length){let n=ot(...t);window.app.vault.getAbstractFileByPath(n)||await window.app.vault.createFolder(n)}}async function V(e,t){t.endsWith(".md")||(t+=".md");let n=f.normalizePath(ot(e,t));return await St(n),n}async function A(e){let{metadataCache:t,vault:n}=window.app,a=f.normalizePath(e);if(a==="/")return Promise.resolve(["",null]);try{let o=t.getFirstLinkpathDest(a,""),r=await n.cachedRead(o),s=window.app.foldManager.load(o);return[r,s]}catch(o){return console.error(`Failed to read the daily note template '${a}'`,o),new f.Notice("Failed to read the daily note template"),["",null]}}function C(e,t="day"){let n=e.clone().startOf(t).format();return`${t}-${n}`}function rt(e){return e.replace(/\[[^\]]*\]/g,"")}function Tt(e,t){if(t==="week"){let n=rt(e);return/w{1,2}/i.test(n)&&(/M{1,4}/.test(n)||/D{1,4}/.test(n))}return!1}function S(e,t){return it(e.basename,t)}function kt(e,t){return it(At(e),t)}function it(e,t){let a={day:O,week:L,month:_,quarter:I,year:x}[t]().format.split("/").pop(),o=window.moment(e,a,!0);if(!o.isValid())return null;if(Tt(a,t)&&t==="week"){let r=rt(a);if(/w{1,2}/i.test(r))return window.moment(e,a.replace(/M{1,4}/g,"").replace(/D{1,4}/g,""),!1)}return o}var z=class extends Error{};async function st(e){let t=window.app,{vault:n}=t,a=window.moment,{template:o,format:r,folder:s}=O(),[g,p]=await A(o),c=e.format(r),Y=await V(s,c);try{let D=await n.create(Y,g.replace(/{{\s*date\s*}}/gi,c).replace(/{{\s*time\s*}}/gi,a().format("HH:mm")).replace(/{{\s*title\s*}}/gi,c).replace(/{{\s*(date|time)\s*(([+-]\d+)([yqmwdhs]))?\s*(:.+?)?}}/gi,(y,m,w,l,d,u)=>{let N=a(),P=e.clone().set({hour:N.get("hour"),minute:N.get("minute"),second:N.get("second")});return w&&P.add(parseInt(l,10),d),u?P.format(u.substring(1).trim()):P.format(r)}).replace(/{{\s*yesterday\s*}}/gi,e.clone().subtract(1,"day").format(r)).replace(/{{\s*tomorrow\s*}}/gi,e.clone().add(1,"d").format(r)));return t.foldManager.save(D,p),D}catch(D){console.error(`Failed to create file: '${Y}'`,D),new f.Notice("Unable to create new file.")}}function Ot(e,t){return t[C(e,"day")]??null}function Lt(){let{vault:e}=window.app,{folder:t}=O(),n=e.getAbstractFileByPath(f.normalizePath(t));if(!n)throw new z("Failed to find daily notes folder");let a={};return f.Vault.recurseChildren(n,o=>{if(o instanceof f.TFile){let r=S(o,"day");if(r){let s=C(r,"day");a[s]=o}}}),a}var j=class extends Error{};function _t(){let{moment:e}=window,t=e.localeData()._week.dow,n=["sunday","monday","tuesday","wednesday","thursday","friday","saturday"];for(;t;)n.push(n.shift()),t--;return n}function It(e){return _t().indexOf(e.toLowerCase())}async function lt(e){let{vault:t}=window.app,{template:n,format:a,folder:o}=L(),[r,s]=await A(n),g=e.format(a),p=await V(o,g);try{let c=await t.create(p,r.replace(/{{\s*(date|time)\s*(([+-]\d+)([yqmwdhs]))?\s*(:.+?)?}}/gi,(Y,D,y,m,w,l)=>{let d=window.moment(),u=e.clone().set({hour:d.get("hour"),minute:d.get("minute"),second:d.get("second")});return y&&u.add(parseInt(m,10),w),l?u.format(l.substring(1).trim()):u.format(a)}).replace(/{{\s*title\s*}}/gi,g).replace(/{{\s*time\s*}}/gi,window.moment().format("HH:mm")).replace(/{{\s*(sunday|monday|tuesday|wednesday|thursday|friday|saturday)\s*:(.*?)}}/gi,(Y,D,y)=>{let m=It(D);return e.weekday(m).format(y.trim())}));return window.app.foldManager.save(c,s),c}catch(c){console.error(`Failed to create file: '${p}'`,c),new f.Notice("Unable to create new file.")}}function xt(e,t){return t[C(e,"week")]??null}function Vt(){let e={};if(!dt())return e;let{vault:t}=window.app,{folder:n}=L(),a=t.getAbstractFileByPath(f.normalizePath(n));if(!a)throw new j("Failed to find weekly notes folder");return f.Vault.recurseChildren(a,o=>{if(o instanceof f.TFile){let r=S(o,"week");if(r){let s=C(r,"week");e[s]=o}}}),e}var K=class extends Error{};async function ct(e){let{vault:t}=window.app,{template:n,format:a,folder:o}=_(),[r,s]=await A(n),g=e.format(a),p=await V(o,g);try{let c=await t.create(p,r.replace(/{{\s*(date|time)\s*(([+-]\d+)([yqmwdhs]))?\s*(:.+?)?}}/gi,(Y,D,y,m,w,l)=>{let d=window.moment(),u=e.clone().set({hour:d.get("hour"),minute:d.get("minute"),second:d.get("second")});return y&&u.add(parseInt(m,10),w),l?u.format(l.substring(1).trim()):u.format(a)}).replace(/{{\s*date\s*}}/gi,g).replace(/{{\s*time\s*}}/gi,window.moment().format("HH:mm")).replace(/{{\s*title\s*}}/gi,g));return window.app.foldManager.save(c,s),c}catch(c){console.error(`Failed to create file: '${p}'`,c),new f.Notice("Unable to create new file.")}}function Rt(e,t){return t[C(e,"month")]??null}function Wt(){let e={};if(!ut())return e;let{vault:t}=window.app,{folder:n}=_(),a=t.getAbstractFileByPath(f.normalizePath(n));if(!a)throw new K("Failed to find monthly notes folder");return f.Vault.recurseChildren(a,o=>{if(o instanceof f.TFile){let r=S(o,"month");if(r){let s=C(r,"month");e[s]=o}}}),e}var G=class extends Error{};async function Ht(e){let{vault:t}=window.app,{template:n,format:a,folder:o}=I(),[r,s]=await A(n),g=e.format(a),p=await V(o,g);try{let c=await t.create(p,r.replace(/{{\s*(date|time)\s*(([+-]\d+)([yqmwdhs]))?\s*(:.+?)?}}/gi,(Y,D,y,m,w,l)=>{let d=window.moment(),u=e.clone().set({hour:d.get("hour"),minute:d.get("minute"),second:d.get("second")});return y&&u.add(parseInt(m,10),w),l?u.format(l.substring(1).trim()):u.format(a)}).replace(/{{\s*date\s*}}/gi,g).replace(/{{\s*time\s*}}/gi,window.moment().format("HH:mm")).replace(/{{\s*title\s*}}/gi,g));return window.app.foldManager.save(c,s),c}catch(c){console.error(`Failed to create file: '${p}'`,c),new f.Notice("Unable to create new file.")}}function Ut(e,t){return t[C(e,"quarter")]??null}function Bt(){let e={};if(!gt())return e;let{vault:t}=window.app,{folder:n}=I(),a=t.getAbstractFileByPath(f.normalizePath(n));if(!a)throw new G("Failed to find quarterly notes folder");return f.Vault.recurseChildren(a,o=>{if(o instanceof f.TFile){let r=S(o,"quarter");if(r){let s=C(r,"quarter");e[s]=o}}}),e}var J=class extends Error{};async function qt(e){let{vault:t}=window.app,{template:n,format:a,folder:o}=x(),[r,s]=await A(n),g=e.format(a),p=await V(o,g);try{let c=await t.create(p,r.replace(/{{\s*(date|time)\s*(([+-]\d+)([yqmwdhs]))?\s*(:.+?)?}}/gi,(Y,D,y,m,w,l)=>{let d=window.moment(),u=e.clone().set({hour:d.get("hour"),minute:d.get("minute"),second:d.get("second")});return y&&u.add(parseInt(m,10),w),l?u.format(l.substring(1).trim()):u.format(a)}).replace(/{{\s*date\s*}}/gi,g).replace(/{{\s*time\s*}}/gi,window.moment().format("HH:mm")).replace(/{{\s*title\s*}}/gi,g));return window.app.foldManager.save(c,s),c}catch(c){console.error(`Failed to create file: '${p}'`,c),new f.Notice("Unable to create new file.")}}function Qt(e,t){return t[C(e,"year")]??null}function $t(){let e={};if(!ft())return e;let{vault:t}=window.app,{folder:n}=x(),a=t.getAbstractFileByPath(f.normalizePath(n));if(!a)throw new J("Failed to find yearly notes folder");return f.Vault.recurseChildren(a,o=>{if(o instanceof f.TFile){let r=S(o,"year");if(r){let s=C(r,"year");e[s]=o}}}),e}function zt(){let{app:e}=window,t=e.internalPlugins.plugins["daily-notes"];if(t&&t.enabled)return!0;let n=e.plugins.getPlugin("periodic-notes");return n&&n.settings?.daily?.enabled}function dt(){let{app:e}=window;if(e.plugins.getPlugin("calendar"))return!0;let t=e.plugins.getPlugin("periodic-notes");return t&&t.settings?.weekly?.enabled}function ut(){let{app:e}=window,t=e.plugins.getPlugin("periodic-notes");return t&&t.settings?.monthly?.enabled}function gt(){let{app:e}=window,t=e.plugins.getPlugin("periodic-notes");return t&&t.settings?.quarterly?.enabled}function ft(){let{app:e}=window,t=e.plugins.getPlugin("periodic-notes");return t&&t.settings?.yearly?.enabled}function jt(e){let t={day:O,week:L,month:_,quarter:I,year:x}[e];return t()}function Kt(e,t){return{day:st,month:ct,week:lt}[e](t)}i.DEFAULT_DAILY_NOTE_FORMAT=Q;i.DEFAULT_MONTHLY_NOTE_FORMAT=et;i.DEFAULT_QUARTERLY_NOTE_FORMAT=nt;i.DEFAULT_WEEKLY_NOTE_FORMAT=$;i.DEFAULT_YEARLY_NOTE_FORMAT=at;i.appHasDailyNotesPluginLoaded=zt;i.appHasMonthlyNotesPluginLoaded=ut;i.appHasQuarterlyNotesPluginLoaded=gt;i.appHasWeeklyNotesPluginLoaded=dt;i.appHasYearlyNotesPluginLoaded=ft;i.createDailyNote=st;i.createMonthlyNote=ct;i.createPeriodicNote=Kt;i.createQuarterlyNote=Ht;i.createWeeklyNote=lt;i.createYearlyNote=qt;i.getAllDailyNotes=Lt;i.getAllMonthlyNotes=Wt;i.getAllQuarterlyNotes=Bt;i.getAllWeeklyNotes=Vt;i.getAllYearlyNotes=$t;i.getDailyNote=Ot;i.getDailyNoteSettings=O;i.getDateFromFile=S;i.getDateFromPath=kt;i.getDateUID=C;i.getMonthlyNote=Rt;i.getMonthlyNoteSettings=_;i.getPeriodicNoteSettings=jt;i.getQuarterlyNote=Ut;i.getQuarterlyNoteSettings=I;i.getTemplateInfo=A;i.getWeeklyNote=xt;i.getWeeklyNoteSettings=L;i.getYearlyNote=Qt;i.getYearlyNoteSettings=x});var Jt={};vt(Jt,{default:()=>q});module.exports=bt(Jt);var ht=require("obsidian");var E=require("obsidian"),v=Mt(pt());var mt=require("obsidian"),X=class extends mt.Modal{constructor(t,n){super(t),this.config=n}onOpen(){let{contentEl:t}=this,{cta:n,onAccept:a,text:o,title:r}=this.config;t.empty(),t.createEl("h2",{text:r}),t.createEl("p",{text:o}),t.createDiv("modal-button-container",s=>{s.createEl("button",{text:"Never mind"}).addEventListener("click",()=>this.close()),s.createEl("button",{cls:"mod-cta",text:n}).addEventListener("click",async g=>{await a(g),this.close()})})}onClose(){let{contentEl:t}=this;t.empty()}};function yt(e,t){new X(e,t).open()}var T="yearly-calendar-view",H=class extends E.ItemView{constructor(t,n){super(t),this.plugin=n}getViewType(){return T}getDisplayText(){return`Year Calendar - ${this.plugin.settings.year}`}getIcon(){return"calendar-days"}async onOpen(){let t=this.containerEl.children[1];t.empty(),this.calendarContentEl=t.createDiv({cls:"continuous-calendar-content"}),await this.renderCalendar(),this.registerDomEvent(this.calendarContentEl,"click",this.handleClick.bind(this))}async onClose(){}async refresh(){this.leaf.updateHeader(),await this.renderCalendar()}async renderCalendar(){this.calendarContentEl.empty();let t=this.plugin.settings.year,n=(0,E.moment)().format("YYYY-MM-DD"),a=(0,v.getAllDailyNotes)(),o=this.app.vault.getMarkdownFiles(),r=[];for(let m of o){let l=this.app.metadataCache.getFileCache(m)?.frontmatter;if(!l)continue;let d=!1,u=null,N=null,P=null;if(l.date){let F=(0,E.moment)(l.date.toString(),"YYYY-MM-DD",!0);F.isValid()&&(u=F.format("YYYY-MM-DD"),d=!0)}if(l.dateStart&&l.dateEnd){let F=(0,E.moment)(l.dateStart.toString(),"YYYY-MM-DD",!0),R=(0,E.moment)(l.dateEnd.toString(),"YYYY-MM-DD",!0);F.isValid()&&R.isValid()&&(N=F.format("YYYY-MM-DD"),P=R.format("YYYY-MM-DD"),d=!0)}d&&r.push({date:u,dateStart:N,dateEnd:P,name:m.basename,color:l.color})}let s=this.calendarContentEl.createEl("table",{cls:"my-calendar-table"}),p=s.createEl("thead").createEl("tr");p.createEl("th",{text:"W"}),"Mon Tue Wed Thu Fri Sat Sun".split(" ").forEach(m=>p.createEl("th",{text:m}));let c=s.createEl("tbody"),Y=(0,E.moment)(`${t}-01-01`).startOf("isoWeek"),D=(0,E.moment)(`${t}-12-31`).endOf("isoWeek"),y=Y.clone();for(;y.isBefore(D);){let m=c.createEl("tr");m.createEl("td",{cls:"week-number",text:y.isoWeek().toString()});for(let w=0;w<7;w++){let l=y,d=l.format("YYYY-MM-DD"),u=m.createEl("td");u.dataset.date=d;let N=["calendar-cell"],P=l.month()%2===1;N.push(P?"odd-month":"even-month"),l.year()!==t&&N.push("other-year"),d===n&&N.push("today"),u.addClass(...N);let F=u.createDiv({cls:"cell-content"}),R=F.createDiv({cls:"top-content"}),wt=F.createDiv({cls:"dot-area"}),Dt=F.createDiv({cls:"range-bar-area"}),Z=R.createSpan({cls:"day-number"});l.year()===t&&(Z.setText(l.date().toString()),(0,v.getDailyNote)(l,a)&&Z.addClass("has-daily-note")),r.filter(h=>h.date===d).forEach(h=>{let b=wt.createSpan({cls:"dot",text:"\u25CF"});b.title=h.name,b.style.color=h.color||this.plugin.settings.defaultDotColor}),r.filter(h=>h.dateStart&&h.dateEnd&&l.isBetween(h.dateStart,h.dateEnd,"day","[]")).forEach(h=>{let b=Dt.createDiv({cls:"range-bar",title:h.name});b.style.backgroundColor=h.color||this.plugin.settings.defaultBarColor,l.isSame(h.dateStart,"day")&&b.addClass("range-start"),l.isSame(h.dateEnd,"day")&&b.addClass("range-end")}),y.add(1,"day")}}}handleClick(t){let n=t.target;if(n.closest(".day-number")){let o=n.closest("td.calendar-cell");if(o&&o.dataset.date){let r=(0,E.moment)(o.dataset.date);this.openOrCreateDailyNote(r,t)}}}async openOrCreateDailyNote(t,n){let{workspace:a}=this.app,o=(0,v.getAllDailyNotes)(),r=(0,v.getDailyNote)(t,o),s=n.ctrlKey||n.metaKey,g=async()=>{try{let p=await(0,v.createDailyNote)(t);await a.openLinkText(p.path,"",s)}catch(p){console.error(`Failed to create daily note for ${t.format("YYYY-MM-DD")}:`,p)}};r?await a.openLinkText(r.path,"",s):this.plugin.settings.shouldConfirmBeforeCreate?yt(this.app,{title:"Create Daily Note?",text:`Daily note for ${t.format("YYYY-MM-DD")} does not exist. Create it now?`,cta:"Create",onAccept:g}):await g()}};var M=require("obsidian"),U={"Default (Theme-based)":"currentColor",Red:"var(--color-red-tint)",Orange:"var(--color-orange-tint)",Yellow:"var(--color-yellow-tint)",Green:"var(--color-green-tint)",Cyan:"var(--color-cyan-tint)",Blue:"var(--color-blue-tint)",Purple:"var(--color-purple-tint)","Accent Color":"var(--interactive-accent)"},B=class extends M.PluginSettingTab{constructor(t,n){super(t,n),this.plugin=n}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"Continuous Calendar Settings"}),new M.Setting(t).setName("Year to Display").setDesc("Which year the calendar should show.").addText(n=>n.setPlaceholder("e.g., 2024").setValue(this.plugin.settings.year.toString()).onChange(async a=>{let o=parseInt(a);isNaN(o)||(this.plugin.settings.year=o,await this.plugin.saveSettings(),this.plugin.refreshCalendarView())})),new M.Setting(t).setName("Default Event Dot Color").setDesc("Fallback color if a note has a date but no `color` frontmatter specified.").addDropdown(n=>{Object.keys(U).forEach(a=>{n.addOption(U[a],a)}),n.setValue(this.plugin.settings.defaultDotColor),n.onChange(async a=>{this.plugin.settings.defaultDotColor=a,await this.plugin.saveSettings(),this.plugin.refreshCalendarView()})}),new M.Setting(t).setName("Default Range Bar Color").setDesc("Fallback color for range bars if note has no `color` frontmatter.").addDropdown(n=>{Object.keys(U).forEach(a=>{n.addOption(U[a],a)}),n.setValue(this.plugin.settings.defaultBarColor),n.onChange(async a=>{this.plugin.settings.defaultBarColor=a,await this.plugin.saveSettings(),this.plugin.refreshCalendarView()})}),new M.Setting(t).setName("Confirm before creating daily notes").setDesc("Show a confirmation dialog asking if you want to create a missing daily note.").addToggle(n=>n.setValue(this.plugin.settings.shouldConfirmBeforeCreate).onChange(async a=>{this.plugin.settings.shouldConfirmBeforeCreate=a,await this.plugin.saveSettings()}))}};var Gt={year:new Date().getFullYear(),defaultDotColor:"currentColor",defaultBarColor:"var(--interactive-accent)",shouldConfirmBeforeCreate:!0},q=class extends ht.Plugin{constructor(){super(...arguments);this.calendarView=null}async onload(){console.log("Loading Continuous Calendar Plugin"),await this.loadSettings(),this.registerView(T,n=>(this.calendarView=new H(n,this),this.calendarView)),this.addRibbonIcon("calendar-days","Open Continuous Calendar",n=>{this.activateView()}),this.addSettingTab(new B(this.app,this))}onunload(){console.log("Unloading Continuous Calendar Plugin"),this.calendarView=null}async loadSettings(){this.settings=Object.assign({},Gt,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async activateView(){this.app.workspace.getLeavesOfType(T).forEach(n=>{n.detach()}),await this.app.workspace.getRightLeaf(!1)?.setViewState({type:T,active:!0}),this.app.workspace.revealLeaf(this.app.workspace.getLeavesOfType(T)[0])}refreshCalendarView(){this.calendarView&&(this.calendarView.refresh(),console.log("Calendar view refreshed."))}};
