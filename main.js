var h=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var P=Object.getOwnPropertyNames;var T=Object.prototype.hasOwnProperty;var x=(a,e)=>{for(var t in e)h(a,t,{get:e[t],enumerable:!0})},v=(a,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of P(e))!T.call(a,n)&&n!==t&&h(a,n,{get:()=>e[n],enumerable:!(s=S(e,n))||s.enumerable});return a};var D=a=>v(h({},"__esModule",{value:!0}),a);var L={};x(L,{default:()=>p});module.exports=D(L);var f=require("obsidian");var o=require("obsidian"),i="yearly-calendar-view",c=class extends o.ItemView{constructor(e,t){super(e),this.plugin=t}getViewType(){return i}getDisplayText(){return`Year Calendar - ${this.plugin.settings.year}`}getIcon(){return"calendar-days"}async onOpen(){let e=this.containerEl.children[1];e.empty(),this.renderCalendar(e)}async onClose(){}renderCalendar(e){let t=this.plugin.settings.year,s=e.createEl("table",{cls:"my-calendar-table"}),u=s.createEl("thead").createEl("tr");u.createEl("th",{text:"W"}),"Mon Tue Wed Thu Fri Sat Sun".split(" ").forEach(l=>u.createEl("th",{text:l}));let w=s.createEl("tbody"),m=(0,o.moment)(`${t}-01-01`).startOf("isoWeek"),E=(0,o.moment)(`${t}-12-31`).endOf("isoWeek"),r=m.clone();for(;r.isBefore(E);){let l=w.createEl("tr");l.createEl("td",{text:r.isoWeek().toString()});for(let y=0;y<7;y++){let C=l.createEl("td");r.year()===t&&C.setText(r.date().toString()),r.add(1,"day")}}}};var g=require("obsidian"),d=class extends g.PluginSettingTab{constructor(e,t){super(e,t),this.plugin=t}display(){let{containerEl:e}=this;e.empty(),e.createEl("h2",{text:"Continuous Calendar Settings"}),new g.Setting(e).setName("Year to Display").setDesc("Which year the calendar should show.").addText(t=>t.setPlaceholder("e.g., 2024").setValue(this.plugin.settings.year.toString()).onChange(async s=>{let n=parseInt(s);isNaN(n)||(this.plugin.settings.year=n,await this.plugin.saveSettings())}))}};var k={year:new Date().getFullYear()},p=class extends f.Plugin{async onload(){console.log("Loading Continuous Calendar Plugin"),await this.loadSettings(),this.registerView(i,e=>new c(e,this)),this.addRibbonIcon("calendar-days","Open Continuous Calendar",e=>{this.activateView()}),this.addSettingTab(new d(this.app,this))}onunload(){console.log("Unloading Continuous Calendar Plugin")}async loadSettings(){this.settings=Object.assign({},k,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async activateView(){this.app.workspace.getLeavesOfType(i).forEach(e=>{e.detach()}),await this.app.workspace.getRightLeaf(!1)?.setViewState({type:i,active:!0}),this.app.workspace.revealLeaf(this.app.workspace.getLeavesOfType(i)[0])}};
