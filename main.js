var M=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var R=Object.getOwnPropertyNames;var W=Object.prototype.hasOwnProperty;var B=(s,e)=>{for(var t in e)M(s,t,{get:e[t],enumerable:!0})},I=(s,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of R(e))!W.call(s,i)&&i!==t&&M(s,i,{get:()=>e[i],enumerable:!(n=A(e,i))||n.enumerable});return s};var N=s=>I(M({},"__esModule",{value:!0}),s);var _={};B(_,{default:()=>E});module.exports=N(_);var k=require("obsidian");var l=require("obsidian"),u="yearly-calendar-view",D=class extends l.ItemView{constructor(e,t){super(e),this.plugin=t}getViewType(){return u}getDisplayText(){return`Year Calendar - ${this.plugin.settings.year}`}getIcon(){return"calendar-days"}async onOpen(){let e=this.containerEl.children[1];e.empty(),await this.renderCalendar(e)}async onClose(){}async refresh(){this.leaf.updateHeader();let e=this.containerEl.children[1];e.empty(),await this.renderCalendar(e)}async renderCalendar(e){let t=this.plugin.settings.year,n=(0,l.moment)().format("YYYY-MM-DD"),i=this.app.vault.getMarkdownFiles(),Y=[];for(let c of i){let a=this.app.metadataCache.getFileCache(c)?.frontmatter;if(!a)continue;let g=!1,f=null,d=null,C=null;if(a.date){let o=(0,l.moment)(a.date.toString(),"YYYY-MM-DD",!0);o.isValid()&&(f=o.format("YYYY-MM-DD"),g=!0)}if(a.dateStart&&a.dateEnd){let o=(0,l.moment)(a.dateStart.toString(),"YYYY-MM-DD",!0),m=(0,l.moment)(a.dateEnd.toString(),"YYYY-MM-DD",!0);o.isValid()&&m.isValid()&&(d=o.format("YYYY-MM-DD"),C=m.format("YYYY-MM-DD"),g=!0)}g&&Y.push({date:f,dateStart:d,dateEnd:C,name:c.basename,color:a.color})}let V=e.createEl("table",{cls:"my-calendar-table"}),b=V.createEl("thead").createEl("tr");b.createEl("th",{text:"W"}),"Mon Tue Wed Thu Fri Sat Sun".split(" ").forEach(c=>b.createEl("th",{text:c}));let O=V.createEl("tbody"),P=(0,l.moment)(`${t}-01-01`).startOf("isoWeek"),T=(0,l.moment)(`${t}-12-31`).endOf("isoWeek"),y=P.clone();for(;y.isBefore(T);){let c=O.createEl("tr");c.createEl("td",{cls:"week-number",text:y.isoWeek().toString()});for(let S=0;S<7;S++){let a=y,g=a.format("YYYY-MM-DD"),f=c.createEl("td"),d=["calendar-cell"],C=a.month()%2===1;d.push(C?"odd-month":"even-month"),a.year()!==t&&d.push("other-year"),g===n&&d.push("today"),f.addClass(...d);let o=f.createDiv({cls:"cell-content"}),m=o.createDiv({cls:"top-content"}),x=o.createDiv({cls:"dot-area"}),L=o.createDiv({cls:"range-bar-area"});a.year()===t&&m.setText(a.date().toString()),Y.filter(r=>r.date===g).forEach(r=>{let h=x.createSpan({cls:"dot",text:"\u25CF"});h.title=r.name,h.style.color=r.color||this.plugin.settings.defaultDotColor}),Y.filter(r=>r.dateStart&&r.dateEnd&&a.isBetween(r.dateStart,r.dateEnd,"day","[]")).forEach(r=>{let h=L.createDiv({cls:"range-bar",title:r.name});h.style.backgroundColor=r.color||this.plugin.settings.defaultBarColor,a.isSame(r.dateStart,"day")&&h.addClass("range-start"),a.isSame(r.dateEnd,"day")&&h.addClass("range-end")}),y.add(1,"day")}}}};var p=require("obsidian"),w={"Default (Theme-based)":"currentColor",Red:"var(--color-red-tint)",Orange:"var(--color-orange-tint)",Yellow:"var(--color-yellow-tint)",Green:"var(--color-green-tint)",Cyan:"var(--color-cyan-tint)",Blue:"var(--color-blue-tint)",Purple:"var(--color-purple-tint)","Accent Color":"var(--interactive-accent)"},v=class extends p.PluginSettingTab{constructor(e,t){super(e,t),this.plugin=t}display(){let{containerEl:e}=this;e.empty(),e.createEl("h2",{text:"Continuous Calendar Settings"}),new p.Setting(e).setName("Year to Display").setDesc("Which year the calendar should show.").addText(t=>t.setPlaceholder("e.g., 2024").setValue(this.plugin.settings.year.toString()).onChange(async n=>{let i=parseInt(n);isNaN(i)||(this.plugin.settings.year=i,await this.plugin.saveSettings(),this.plugin.refreshCalendarView())})),new p.Setting(e).setName("Default Event Dot Color").setDesc("Fallback color if a note has a date but no `color` frontmatter specified.").addDropdown(t=>{Object.keys(w).forEach(n=>{t.addOption(w[n],n)}),t.setValue(this.plugin.settings.defaultDotColor),t.onChange(async n=>{this.plugin.settings.defaultDotColor=n,await this.plugin.saveSettings(),this.plugin.refreshCalendarView()})}),new p.Setting(e).setName("Default Range Bar Color").setDesc("Fallback color for range bars if note has no `color` frontmatter.").addDropdown(t=>{Object.keys(w).forEach(n=>{t.addOption(w[n],n)}),t.setValue(this.plugin.settings.defaultBarColor),t.onChange(async n=>{this.plugin.settings.defaultBarColor=n,await this.plugin.saveSettings(),this.plugin.refreshCalendarView()})})}};var F={year:new Date().getFullYear(),defaultDotColor:"currentColor",defaultBarColor:"var(--interactive-accent)"},E=class extends k.Plugin{constructor(){super(...arguments);this.calendarView=null}async onload(){console.log("Loading Continuous Calendar Plugin"),await this.loadSettings(),this.registerView(u,t=>(this.calendarView=new D(t,this),this.calendarView)),this.addRibbonIcon("calendar-days","Open Continuous Calendar",t=>{this.activateView()}),this.addSettingTab(new v(this.app,this))}onunload(){console.log("Unloading Continuous Calendar Plugin"),this.calendarView=null}async loadSettings(){this.settings=Object.assign({},F,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async activateView(){this.app.workspace.getLeavesOfType(u).forEach(t=>{t.detach()}),await this.app.workspace.getRightLeaf(!1)?.setViewState({type:u,active:!0}),this.app.workspace.revealLeaf(this.app.workspace.getLeavesOfType(u)[0])}refreshCalendarView(){this.calendarView&&(this.calendarView.refresh(),console.log("Calendar view refreshed."))}};
